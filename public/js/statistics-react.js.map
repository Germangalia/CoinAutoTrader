{"version":3,"sources":["statistics-react.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"statistics-react.js","sourcesContent":["// Let's create a \"real-time search\" component\n\nvar SearchExample = React.createClass({\n\n    getInitialState: function(){\n        return { searchString: '' };\n    },\n\n    handleChange: function(e){\n\n        // If you comment out this line, the text box will not change its value.\n        // This is because in React, an input cannot change independently of the value\n        // that was assigned to it. In our case this is this.state.searchString.\n\n        this.setState({searchString:e.target.value});\n    },\n\n    render: function() {\n\n        var libraries = this.props.items,\n            searchString = this.state.searchString.trim().toLowerCase();\n\n\n        if(searchString.length > 0){\n\n            // We are searching. Filter the results.\n\n            libraries = libraries.filter(function(l){\n                return l.name.toLowerCase().match( searchString );\n            });\n\n        }\n\n        return <div>\n            <input type=\"text\" value={this.state.searchString} onChange={this.handleChange} placeholder=\"Type here\" />\n\n            <ul>\n\n                { libraries.map(function(l){\n                    return <li>{l.name} <a href={l.url}>{l.url}</a></li>\n                }) }\n\n            </ul>\n\n        </div>;\n\n    }\n});\n\n\nvar libraries = [\n\n    { name: 'Backbone.js', url: 'http://documentcloud.github.io/backbone/'},\n    { name: 'AngularJS', url: 'https://angularjs.org/'},\n    { name: 'jQuery', url: 'http://jquery.com/'},\n    { name: 'Prototype', url: 'http://www.prototypejs.org/'},\n    { name: 'React', url: 'http://facebook.github.io/react/'},\n    { name: 'Ember', url: 'http://emberjs.com/'},\n    { name: 'Knockout.js', url: 'http://knockoutjs.com/'},\n    { name: 'Dojo', url: 'http://dojotoolkit.org/'},\n    { name: 'Mootools', url: 'http://mootools.net/'},\n    { name: 'Underscore', url: 'http://documentcloud.github.io/underscore/'},\n    { name: 'Lodash', url: 'http://lodash.com/'},\n    { name: 'Moment', url: 'http://momentjs.com/'},\n    { name: 'Express', url: 'http://expressjs.com/'},\n    { name: 'Koa', url: 'http://koajs.com/'},\n\n];\n\n// Render the SearchExample component on the page\n\nReactDOM.render(\n    <SearchExample items={ libraries } />,\n    document.getElementById('container')\n);"],"sourceRoot":"/source/"}