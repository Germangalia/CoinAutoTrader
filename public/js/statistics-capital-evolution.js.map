{"version":3,"sources":["graphic-functions.js","statistics-capital-evolution.js"],"names":[],"mappingsvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"statistics-capital-evolution.js","sourcesContent":["/**\n * Created by ggalia84 on 18/05/16.\n */\n/**\n * Get History record from User\n */\nfunction getAccounts() {\n    var httpRequest = new XMLHttpRequest();\n    httpRequest.open('GET', \"../api/statistics/getUserAccounts\", false);   //false for syncronus\n    httpRequest.send();\n    return httpRequest.responseText;\n}\n\n/**\n * Get History record from Account\n */\nfunction getAccountHistory(id) {\n    var httpRequest = new XMLHttpRequest();\n    httpRequest.open('GET', \"../api/statistics/getAccountHistory/\" + id, false);   //false for syncronus\n    httpRequest.send();\n    return httpRequest.responseText;\n}\n\n/**\n * Parser for response of the API and convert in array of objects\n */\nfunction parseResponse (response){\n    // JavaScript array of JavaScript objects\n    var objects = [];\n    for (var i=response.length;i--;) objects = JSON.parse(response);\n\n    return objects;\n\n}\n\n/**\n * Parser for Attributes from objects and convert in array of attributes\n */\nfunction parseAttributes (objects, prop, convert){\n    var arr = [];\n    for (var i= 0 ; i < objects.length ; i++){\n        if(convert == 'number') {\n            var number = objects[i][prop];\n            arr.push(parseFloat(number));\n        }else if(convert == 'date') {\n            var date = objects[i][prop];\n            arr.push(new Date(date));\n        }else if (convert == 'string'){\n            arr.push(objects[i][prop]);\n        }\n\n    }\n    return arr;\n\n}\n\n/**\n * Get the content values from attributes\n */\nfunction getContent(id, objects, prop, convert){\n    var arr;\n    for (var k= 0 ; k < objects.length ; k++){\n\n        if(objects[k]['account_id'] == id){\n            arr = parseAttributes(objects, prop, convert);\n        }\n\n    }\n    return arr;\n}\n\n\n/**\n * Clean the selection options\n */\nfunction disableButton(id){\n    var select = document.getElementById(id);\n    select.disabled = true;\n}\n\n/**\n * Charge the drop list for select the accounts\n */\nfunction chargeDropList(){\n    //document.getElementById(\"loadgraphic\").addEventListener(\"click\", chargeOnLoad);\n\n    disableButton(\"chargeId\");\n\n    var response = getAccounts();\n    var objs = parseResponse(response);\n\n    var options= parseAttributes(objs, 'id', 'string');\n\n    var select = document.getElementById(\"selectNumber\");\n\n    for(var i = 0; i < options.length; i++) {\n        var opt = document.createElement('option');\n        opt.innerHTML = options[i];\n        opt.value = options[i];\n        select.appendChild(opt);\n    }\n\n    chargeOnLoad();\n}","/**\n * Created by ggalia84 on 19/05/16.\n */\n\n/**\n * Charge on load the page\n */\nfunction chargeOnLoad(){\n    //Initial listener from buttom and charge droplist.\n    //document.getElementById(\"loadgraphic\").addEventListener(\"click\", chargeOnLoad);\n    //chargeDropList();\n    loadGraphic();\n\n    /**\n     * Create and print the chart in canvas HTML\n     */\n    function makeChart(labels, data) {\n\n\n        // Create the chart.js data structure using 'labels' and 'data'\n        var graphData = {\n            labels : labels,\n            datasets : [{\n                label: \"Capital (USD)\",\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: \"rgba(75,192,192,0.4)\",\n                borderColor: \"rgba(75,192,192,1)\",\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: \"rgba(75,192,192,1)\",\n                pointBackgroundColor: \"#fff\",\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data                  : data\n            }]\n        };\n\n        // Get the context of the canvas element we want to select\n        var ctx = document.getElementById(\"myLineChart\").getContext(\"2d\");\n\n        // Instantiate a new chart\n        var myLineChart = new Chart(ctx, {\n            type: 'line',\n            data: graphData\n            //options: options\n        });\n    }\n\n\n    /**\n     * Draw the line chart for the accout\n     */\n    function drawLineChart(id) {\n\n        var response = null;\n        var objs = [];\n        var labels = [];\n        var data = [];\n\n        response = getAccountHistory(id);\n        objs = parseResponse(response);\n\n        labels= parseAttributes(objs, 'created_at', 'date');\n        data= parseAttributes(objs, 'capital_amount', 'number');\n\n        //window.console.log(response);\n        //window.console.log(objs);\n        //window.console.log(id);\n        //window.console.log(labels);\n\n        makeChart(labels, data);\n    }\n\n    /**\n     * Function to load a graphic\n     */\n    function loadGraphic(){\n        var id = document.getElementById(\"selectNumber\").value;\n        drawLineChart(id);\n    }\n\n}\n\n\n"],"sourceRoot":"/source/"}