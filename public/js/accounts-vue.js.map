{"version":3,"sources":["accounts-vue.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"accounts-vue.js","sourcesContent":["/**\n * Created by ggalia84 on 4/05/16.\n */\nvar vm = new Vue({\n    el: '#AccountsController',\n\n    data: {\n\n        newAccount: {\n            name: 'hola',\n            initial_capital: '1256'\n        },\n\n        success: false\n    },\n\n    methods: {\n\n        /**\n         * Get user accounts from database\n         */\n        fetchAccounts: function(){\n            this.$http.get('/api/user-accounts', function(data) {\n                this.$set('accounts', data)\n            })\n\n            location.reload(true)   //true-> not use cache\n        },\n\n        /**\n         * Add new account to database\n         * @constructor\n         */\n        AddNewAccount: function () {\n\n\n\n        },\n\n        /**\n         * Activate the user account\n         * @param id\n         */\n        activateAccount: function(id) {\n            this.$http.get('/api/accounts-active/' + id)\n\n            this.fetchAccounts()\n        },\n\n        /**\n         * Remove the user account\n         * @param id\n         */\n        removeAccount: function(id) {\n\n            var ConfirmBox = confirm(\"Are you sure, you want to delete this Account?\")\n\n            if(ConfirmBox) this.$http.get('/api/accounts-delete/' + id)\n\n            this.fetchAccounts()\n        },\n\n    },\n\n    // computed property for form validation state\n    computed: {\n        /**\n         * Validate the item\n         * @returns {{name: boolean, initial_capital: *}}\n         */\n        validation: function () {\n            return {\n                name: !!this.newAccount.name.trim(),\n                initial_capital: this.newAccount.initial_capital.isNumber()\n            }\n        },\n        /**\n         * Check if the item is valid\n         * @returns {boolean}\n         */\n        isValid: function () {\n            var validation = this.validation\n            return Object.keys(validation).every(function (key) {\n                return validation[key]\n            })\n        }\n\n    },\n\n    /**\n     * Execute on load page\n     */\n    ready: function() {\n        this.fetchAccounts()\n\n    }\n});"],"sourceRoot":"/source/"}